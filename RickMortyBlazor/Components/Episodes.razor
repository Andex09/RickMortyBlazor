@using RickMortyBlazor.Client.Services;
@inject IRickMortyApi RickMortyApi

@if (EpisodesList == null)
{
    <p class="align-self-start"><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Season</th>
                <th>Air date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var episode in EpisodesView)
            {
                <tr>
                    <td>@episode.Name</td>
                    <td>@episode.EpisodeCode.Substring(1,2)</td>
                    <td>@episode.AirDate</td>
                </tr>
            }
        </tbody>
    </table>
    <Pagination Metadata="paginationMetadata"
            Spread="5"
            SelectedPage="SelectedPage" />
}

@code {
    [Parameter]
    public int id { get; set; }

    public Character Character { get; set; }
    public List<Episode> EpisodesList { get; set; }
    public IEnumerable<Episode> EpisodesView { get; set; }

    PaginationMetadata paginationMetadata = new PaginationMetadata();
    PaginationParameters paginationParameters = new PaginationParameters();

    protected override async Task OnInitializedAsync()
    {
        Character = await RickMortyApi.GetChararter(id);
        EpisodesList = new List<Episode>();
        foreach (var episode in Character.Episode)
        {
            int episodeId = Convert.ToInt16(episode.Split('/').Last());
            EpisodesList.Add(await RickMortyApi.GetEpisode(episodeId));
        }
        paginationMetadata.CurrentPage = 1;
        paginationMetadata.TotalCount = Character.Episode.Count;
        double total = (double) Character.Episode.Count / 5.0;
        paginationMetadata.TotalPages = Convert.ToInt16(Math.Ceiling(total));
        EpisodesView = EpisodesList.Take(5);
    }

    private async Task SelectedPage(int page)
    {
        paginationParameters.PageNumber = page;
        EpisodesView = EpisodesList.Skip(page == 1? 0 : (page - 1) * 5).Take(5);
    }

}
